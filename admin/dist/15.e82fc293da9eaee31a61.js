(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{KWVS:function(e,t){e.exports='<div class="card">\n    <div class="card-header" style="background-color:#2f353a;color:#33adff;">\n          <i class="fa fa-align-justify"></i> CMS Management\n        </div>\n\n\n\x3c!-- <h4 style="padding-left: 425px;">Manage Users</h4> --\x3e\n<div class="tabcntcls" style=" -webkit-transition: all 1s ease;transition: all 1s ease;padding: 25px;">\n  <div class="row">\n    <div class="col-md-9 align-items-center" style="display: inline-flex;padding-left: 0px;">\n      <span>Display : </span>\n      <select (change)="changeRowLimits($event)" style="width: auto;background: transparent;height: 30px;margin-left: 5px;">\n          <option *ngFor="let limit of rowLimits" [value]="limit.value">{{limit.key}}</option>\n      </select>\n\n      <div class="input-group-btn" style="margin-left: 10px;">\n        <button class="btn btn-primary button-refresh" style="cursor:pointer;" type="submit"  (click)="resetuserlist()">\n           <i class="fa fa-refresh" aria-hidden="true"></i>\n        </button>\n      </div>\n\n    </div>\n    <div class="col-md-3 p-2">\n\n        <div class="input-group">\n          <input type="text" [(ngModel)]="defsearch" class="form-control" placeholder="Search" id="txtSearch" (keyup.enter)="updateFilter()"  \n          (keyfocus)="updateFilter()"/>\n          <div class="input-group-btn">\n            <button class="btn btn-primary" style="cursor:pointer;margin-left: -2px;" type="submit" (click)="updateFilter()">\n              <span class="fa fa-search"></span>\n            </button>\n          </div>\n        </div>\n    </div>\n  </div>\n  <div class="d-flex flex-row-reverse">\n      <div class="export_option">\n        <ul class="list-inline">\n          <li class="list-inline-item btn btn-primary" (click)="openaddcherrymodel(addcherrycontent)" style="cursor:pointer;margin-left: -2px;">\n            {{\'Add Token Lots +\'}}\n          </li>\n        </ul>\n      </div>\n    </div>\n  <div class="table-responsive tab_top">\n    <ngx-datatable #usertable class="bootstrap table table-bordered table-striped mb-0 material" [ngClass]="{\'table-loaders\': table_loader == true }"\n\n    [columnMode]="\'force\'"\n    [headerHeight]="30"\n    [footerHeight]="50"\n    [rowHeight]="\'auto\'" [(limit)]="limit" [rows]=\'userrows\' [externalPaging]="true"\n        [count]="page.totalElements"\n        [offset]="page.pageNumber"\n        [limit]="page.size"\n        [scrollbarH]="true"\n        (page)=\'setPage($event)\' [externalSorting]="true" (sort)="onSort($event)" [loadingIndicator]="loading">\n\n    <ngx-datatable-column name="S.No" [width]="50">\n      <ng-template let-rowIndex="rowIndex" let-row="row" ngx-datatable-cell-template>\n        \x3c!-- {{row.$$index + 1}} --\x3e\n        \x3c!-- {{rowIndex + 1}} --\x3e\n        {{(page.pageNumber*page.size)+(rowIndex + 1)}}\n      </ng-template>\n    </ngx-datatable-column>\n\n\n    <ngx-datatable-column name="Designation">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.designation}}\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name="Price">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.price}}\n      </ng-template>\n    </ngx-datatable-column>\n     <ngx-datatable-column name="Total Token">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.total_supply}}\n      </ng-template>\n    </ngx-datatable-column>\n     <ngx-datatable-column name="Location">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.location}}\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name="Status">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.status}}\n      </ng-template>\n    </ngx-datatable-column>\n     \x3c!-- <ngx-datatable-column name="Page Key">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.contract_addrs}}\n      </ng-template>\n    </ngx-datatable-column> --\x3e\n    <ngx-datatable-column name="Modified Date and Time">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.created_date| date: \'medium\'}}\n      </ng-template>\n    </ngx-datatable-column>\n    \n  <ngx-datatable-column name="Action" [resizeable]="false" prop="_id" >\n    <ng-template ngx-datatable-cell-template let-value="value" let-row="row">\n \x3c!--  <button class="btn btn-link mr-1 mb-1 cursorcls" (click)="openeditmodel(edittoken, row)" style="outline:none;" ngbTooltip="Edit">\n   <i class="fa fa-edit"></i> </button> --\x3e\n   <button class="btn btn-link mr-1 mb-1 cursorcls" (click)="openviewmodel(viewtokencontent, row)" style="outline:none;" ngbTooltip="Edit">\n   <i class="fa fa-eye"></i> </button>\n   </ng-template>\n </ngx-datatable-column>\n   \n    </ngx-datatable>\n  </div>\n</div>\n</div>\n\n<ng-template #viewtokencontent let-c="close" let-d="dismiss">\n<div class="modal-header">\n <h6 class="modal-title text-uppercase" style="color:#eb7d34;"><b>View Token Lots</b></h6>\n  <button type="button" class="close" aria-label="Close" (click)="d(\'Cross click\')" ngbTooltip="Close">\n  <span aria-hidden="true">&times;</span>\n  </button>\n</div>\n<div class="modal-body">\n    <div class="common-border"><form  autocomplete="off" (ngSubmit)="editflag(countryflag)" #countryflag="ngForm">\n\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Designation</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.designation"  #designation="ngModel" name="designation"  disabled readonly/>\n       \n      </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Price</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.price" #price="ngModel" name="price" pattern="[a-zA-Z ]+" disabled readonly />\n    </div>\n  </div>\n   <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Price</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.price_btc" #price_btc="ngModel" name="price_btc" pattern="[a-zA-Z ]+" disabled readonly />\n    </div>\n  </div>\n   <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Price</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.price_eth" #price_eth="ngModel" name="price_eth" pattern="[a-zA-Z ]+" disabled readonly />\n    </div>\n  </div>\n   <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Price</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.price_usdt" #price_usdt="ngModel" name="price_usdt" pattern="[a-zA-Z ]+" disabled readonly />\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Total Token</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.total_supply" #total_supply="ngModel" name="total_supply" pattern="[a-zA-Z ]+" disabled readonly />\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Status</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.status" #status="ngModel" name="status"  disabled readonly />\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Location</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.location" #location="ngModel" name="location" pattern="[a-zA-Z ]+" disabled readonly />\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">\n    Start Date</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.start_date" #from_date="ngModel" name="from_date" pattern="[a-zA-Z ]+" disabled readonly />\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">\n    End Date</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.end_date" #to_date="ngModel" name="to_date" pattern="[a-zA-Z ]+" disabled readonly/>\n    </div>\n  </div>\n  \n</form></div>\n</div>\n\n</ng-template>\n\n <ng-template #addcherrycontent let-c="close" let-d="dismiss" class="col-md-12">\n      <div class="modal-header">\n        <h6 class="modal-title text-uppercase" style="color:#eb7d34;"><b>Add Token lots</b></h6>\n        <button type="button" *ngIf="dataLoader" (click)="restrictclose()" class="close" aria-label="Close" ngbTooltip="Close">\n        <span aria-hidden="true">&times;</span>\n        </button>\n         <button type="button" *ngIf="!dataLoader" (click)="d(\'Cross click\')" class="close" aria-label="Close" ngbTooltip="Close">\n        <span aria-hidden="true">&times;</span>\n        </button>\n      </div>\n      <div class="modal-body"  [ngClass]="{\'loaders\': dataLoader == true }">\n        <div class="common-border">\n          <form  autocomplete="off" (ngSubmit)="add_token_result()" #countryflag="ngForm">\n            <div class="form-group row">\n              <label for="example-text-input" class="col-6 col-form-label">Designation</label>\n              <div class="col-6">\n                <input type="text" class="form-control"  [(ngModel)] ="edithostlist.designation" #designation="ngModel" name="designation" required />\n                 <div *ngIf="(designation.invalid && countryflag.submitted) || designation.touched" class="txt-color">\n                  <span *ngIf="designation.errors?.required">Designation  is required</span> \n                  </div>\n              </div>\n            </div>\n            <div class="form-group row">\n              <label for="example-text-input" class="col-6 col-form-label">Price</label>\n              <div class="col-6">\n                <input type="text" class="form-control"  [(ngModel)] ="edithostlist.price" #price="ngModel" name="price" required />\n                 <div *ngIf="(price.invalid && countryflag.submitted) || price.touched" class="txt-color">\n                  <span *ngIf="price.errors?.required">Price is required</span> \n                  </div>\n              </div>\n            </div>\n            <div class="form-group row">\n              <label for="example-text-input" class="col-6 col-form-label">price btc</label>\n              <div class="col-6">\n                <input type="text" class="form-control"  [(ngModel)] ="edithostlist.price_btc" #price_btc="ngModel" name="price_btc" required />\n                 <div *ngIf="(price_btc.invalid && countryflag.submitted) || price_btc.touched" class="txt-color">\n                  <span *ngIf="price_btc.errors?.required">btc price is required</span> \n                  </div>\n              </div>\n            </div>\n            <div class="form-group row">\n              <label for="example-text-input" class="col-6 col-form-label">price eth</label>\n              <div class="col-6">\n                <input type="text" class="form-control"  [(ngModel)] ="edithostlist.price_eth" #price_eth="ngModel" name="price_eth" required />\n                 <div *ngIf="(price_eth.invalid && countryflag.submitted) || price_eth.touched" class="txt-color">\n                  <span *ngIf="price_eth.errors?.required">eth price is required</span> \n                  </div>\n              </div>\n            </div>\n            <div class="form-group row">\n              <label for="example-text-input" class="col-6 col-form-label">price usdt</label>\n              <div class="col-6">\n                <input type="text" class="form-control"  [(ngModel)] ="edithostlist.price_usdt" #price_usdt="ngModel" name="price_usdt" required />\n                 <div *ngIf="(price_usdt.invalid && countryflag.submitted) || price_usdt.touched" class="txt-color">\n                  <span *ngIf="price_usdt.errors?.required">usdt price is required</span> \n                  </div>\n              </div>\n            </div>\n             <div class="form-group row">\n              <label for="example-text-input" class="col-6 col-form-label">Total Token</label>\n              <div class="col-6">\n                <input type="text" class="form-control"  [(ngModel)] ="edithostlist.total_supply" #total_supply="ngModel" name="total_supply"  onkeydown="javascript: return event.keyCode == 69 ? false : true" (keypress)="descimalkey($event)" required />\n                 <div *ngIf="(total_supply.invalid && countryflag.submitted) || total_supply.touched" class="txt-color">\n                  <span *ngIf="total_supply.errors?.required">Total Token is required</span> \n                  </div>\n              </div>\n            </div>\n             <div class="form-group row">\n              <label for="example-text-input" class="col-6 col-form-label">Location</label>\n              <div class="col-6">\n                <input type="text" class="form-control"  [(ngModel)] ="edithostlist.location" #location="ngModel" name="location" required />\n                 <div *ngIf="(location.invalid && countryflag.submitted) || location.touched" class="txt-color">\n                  <span *ngIf="location.errors?.required">Location is required</span> \n                  </div>\n              </div>\n            </div>\n            <div class="form-group row">\n                  <label for="example-text-input" class="col-6 col-form-label">Start Date</label>\n                  <div class="col-6">\n                  <my-date-picker name="start_date" [options]="myOptionss1_start" [(ngModel)]="edithostlist.start_date" #start_date="ngModel" (dateChanged)="onDateChanged($event)" (click)="eidtdisableUntil()" style="display: flex;" placeholder="Start Date" ></my-date-picker>\n                    <div *ngIf="(start_date.invalid && countryflag.submitted) || start_date.touched" class="txt-color">\n                    <span *ngIf="start_date.errors?.required">Start Date is required</span> \n                    </div>\n                  </div>\n                </div>\n\n                <div class="form-group row">\n                  <label for="example-text-input" class="col-6 col-form-label">End Date</label><br>\n                  <div *ngIf="helo1" class="col-6">\n                    <my-date-picker name="end_date" [options]="myOptionss1" [(ngModel)]="edithostlist.end_date" #end_date="ngModel" (dateChanged)="onDate($event)" (click)="eidtdisableUnti()" style="display: flex;" placeholder="End Date" required></my-date-picker>\n                    <div *ngIf="(end_date.invalid && countryflag.submitted) || end_date.touched" class="txt-color">\n                    <span *ngIf="end_date.errors?.required">End Date is required</span>\n                    </div>\n                  </div>\n                  <div *ngIf="!helo1" class="col-6">\n                    <my-date-picker name="end_date" [options]="myOptionss1" [(ngModel)]="edithostlist.end_date" #end_date="ngModel" (dateChanged)="onDate($event)" (click)="eidtdisableUnti()" style="display: flex;" placeholder="End Date" disabled required></my-date-picker> \n                    <div *ngIf="(end_date.invalid && countryflag.submitted) || end_date.touched" class="txt-color">\n                    <span *ngIf="end_date.errors?.required">End Date is required</span>\n                    </div>\n                  </div>\n                </div>\n            <div class="modal-footer">\n              <div> \n                <button type="submit"  style="cursor: pointer; background-color:#349eeb;" [disabled] ="!countryflag.valid" class="btn btn-info cursorcls" >Submit</button>\n                <button type="button"  style="cursor: pointer;background-color:#eb3d34" class="btn btn-secondary cursorcls" (click)="c(\'Close click\')" >Close</button>\n              </div> \n            </div>\n          </form>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template #edittoken let-c="close" let-d="dismiss">\n<div class="modal-header">\n <h6 class="modal-title text-uppercase" style="color:#eb7d34;"><b>Edit Token Lots</b></h6>\n  <button type="button" class="close" aria-label="Close" (click)="d(\'Cross click\')" ngbTooltip="Close">\n  <span aria-hidden="true">&times;</span>\n  </button>\n</div>\n<div class="modal-body">\n    <div class="common-border"><form  autocomplete="off" (ngSubmit)="edittoken_result()" #edit_tokenform="ngForm">\n\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Token Symbol</label>\n    <div class="col-6">\n      <input type="text" class="form-control" [(ngModel)] ="edittoken_list.token_symbol" #token_symbol="ngModel" name="token_symbol" required />\n       <div *ngIf="(token_symbol.invalid && edit_tokenform.submitted) || token_symbol.touched" class="txt-color">\n                  <span *ngIf="token_symbol.errors?.required">Token Symbol is required</span> \n        </div>\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">Token Contract address</label>\n    <div class="col-6">\n      <input type="text" class="form-control"  [(ngModel)] ="edittoken_list.contract_addrs" #contract_addrs="ngModel"\n      name="contract_addrs" required/>\n      <div *ngIf="(contract_addrs.invalid && edit_tokenform.submitted) || contract_addrs.touched" class="txt-color">\n                  <span *ngIf="contract_addrs.errors?.required">Contract address is required</span> \n      </div>    \n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">\n    Token decimal </label>\n    <div class="col-6">\n      <input type="text"  class="form-control"  [(ngModel)] ="edittoken_list.token_decimal" #token_decimal="ngModel" name="token_decimal" required onkeydown="javascript: return event.keyCode == 69 ? false : true" (keypress)="descimalkey($event)" />\n      <div *ngIf="(token_decimal.invalid && edit_tokenform.submitted) || token_decimal.touched" class="txt-color">\n                  <span *ngIf="token_decimal.errors?.required">Token decimal is required</span> \n      </div> \n    </div>\n  </div>\n   <div class="form-group row">\n    <label for="example-text-input" class="col-4 col-form-label">\n    Token Supply </label>\n    <div class="col-6">\n      <input type="text" class="form-control"  [(ngModel)] ="edittoken_list.total_supply" #total_supply="ngModel" name="total_supply" required/>\n       <div *ngIf="(total_supply.invalid && edit_tokenform.submitted) || total_supply.touched" class="txt-color">\n                  <span *ngIf="total_supply.errors?.required">Token Supply is required</span> \n      </div> \n    </div>\n  </div>\n  \n   <div class="form-group row">\n                  <label for="example-text-input" class="col-4 col-form-label">Start Date</label>\n                  <div class="col-6">\n                  <my-date-picker name="start_date" [options]="myOptionss" [(ngModel)]="edittoken_list.start_date" #start_date="ngModel" (dateChanged)="onDateChanged($event)" (click)="eidtdisableUntil_edit()" style="display: flex;" placeholder="Start Date" required></my-date-picker>\n                    <div *ngIf="(start_date.invalid && edit_tokenform.submitted) || start_date.touched" class="txt-color">\n                    <span *ngIf="start_date.errors?.required">Start Date is required</span> \n                    </div>\n                  </div>\n                </div>\n\n                <div class="form-group row">\n                  <label for="example-text-input" class="col-4 col-form-label">End Date</label><br>\n                  <div *ngIf="helo1_edit" class="col-6">\n                    <my-date-picker name="end_date" [options]="myOptionss1_edit" [(ngModel)]="edittoken_list.end_date" #end_date="ngModel" (dateChanged)="onDate($event)" (click)="eidtdisableUnti_edit()" style="display: flex;" placeholder="End Date" required></my-date-picker>\n                    <div *ngIf="(end_date.invalid && edit_tokenform.submitted) || end_date.touched" class="txt-color">\n                    <span *ngIf="end_date.errors?.required">End Date is required</span>\n                    </div>\n                  </div>\n                  <div *ngIf="!helo1_edit" class="col-6">\n                    <my-date-picker name="end_date" [options]="myOptionss1_edit" [(ngModel)]="edittoken_list.end_date" #end_date="ngModel" (dateChanged)="onDate($event)" (click)="eidtdisableUnti_edit()" style="display: flex;" placeholder="End Date" disabled required></my-date-picker> \n                    <div *ngIf="(end_date.invalid && edit_tokenform.submitted) || end_date.touched" class="txt-color">\n                    <span *ngIf="end_date.errors?.required">End Date is required</span>\n                    </div>\n                  </div>\n                </div>\n   <div class="modal-footer">\n              <div> \n                <button type="submit"  style="cursor: pointer; background-color:#349eeb;" [disabled] ="!edit_tokenform.valid" class="btn btn-info cursorcls" >Submit</button>\n                <button type="button"  style="cursor: pointer;background-color:#eb3d34" class="btn btn-secondary cursorcls" (click)="c(\'Close click\')" >Close</button>\n              </div> \n              \n            </div>\n</form></div>\n</div>\n\n</ng-template>\n<ng-template #cmscontent let-c="close" let-d="dismiss">\n    <div class="modal-header">\n      <h6 class="modal-title text-uppercase">Edit Cms</h6>\n      <button type="button" class="close" aria-label="Close" (click)="cancelcms();d(\'Cross click\')"  ngbTooltip="Close">\n        <span aria-hidden="true">&times;</span>\n      </button>\n    </div>\n    <div class="modal-body">\n      <div class="form-group row">\n        <label for="example-text-input" class="col-2 col-form-label">Page Title</label>\n        <div class="col-10">\n          <input type="text" id="cmspagetitle" style="cursor:not-allowed;" class="form-control" placeholder="Page Title"\n           [(ngModel)]="editcms.title" required (change)="changeeditcmsevent($event)" disabled="true" />\n        </div>\n      </div>\n       <div class="form-group row" >\n        <label for="example-text-input" class="col-2 col-form-label">Content Title</label>\n        <div class="col-10">\n          <input type="text" id="cmspagetitle"  class="form-control" placeholder="Content Title"\n           [(ngModel)]="editcms.content_title" required />\n        </div>\n      </div>\n\n        <div class="form-group row" *ngIf="editcms.title==\'global_terms\'|| editcms.title==\'news_terms\'">\n        <label for="example-text-input" class="col-2 col-form-label">Sub Title</label>\n        <div class="col-10">\n          <input type="text" id="cmspagetitle"  class="form-control" placeholder="Sub Title"\n           [(ngModel)]="editcms.sub_title" required disabled="true" />\n        </div>\n      </div>\n\n      <div class="form-group row">\n        <label for="example-text-input" class="col-2 col-form-label">Page Content</label>\n        <div class="col-10">\n          <ckeditor name="editor1" [(ngModel)]="editcms.pagecontent"\n          (ngModelChange)="changeeditcmsevent($event)" \n          [config]="ckeConfig" ></ckeditor>\n        </div>\n      </div>\n       <div class="form-group row"  *ngIf="  editcms.title!=\'Deposit_Withdraw1\' && editcms.title!=\'Deposit_Withdraw2\'  && editcms.title!=\'Deposit_Withdraw3\' && editcms.title!=\'Buy_Sell1\'  && editcms.title!= \'Buy_Sell2\' && editcms.title!=\'Buy_Sell3\' && editcms.title!=\'footercontent\' ">\n        <label for="example-text-input" class="col-2 col-form-label">Image</label>\n        <img  src="{{editcms.image}}" style="height: 60px;width: 60px;" />\n         <div class="col-sm-9 currency_image" style="|padding-left: 22px;">\n          <input  id="idssss" #filess  name="image" type="file" (change)="fileChangeEvent($event,\'image\')" placeholder="Upload a file..." single accept="image/gif,image/jpeg,image/jpg,image/png,"/>\n         \n        </div>\n    </div>\n\n     <div class="form-group row" *ngIf="editcms.title==\'downloadapp\'|| editcms.title==\'googleapp\'">\n        <label for="example-text-input" class="col-2 col-form-label">Second Image</label>\n        <img  src="{{editcms.imagesec}}" style="height: 60px;width: 60px;" />\n         <div class="col-sm-9 currency_image" style="|padding-left: 22px;">\n          <input  id="id_proof" #fileInput  name="image" type="file" (change)="fileChangeEvent($event,\'imagesec\')" placeholder="Upload a file..." single accept="image/gif,image/jpeg,image/jpg,image/png,"/>\n         \n        </div>\n    </div>\n\n\n\n    </div>\n    <div class="modal-footer">\n      <button type="button" [disabled]="diseditcms" style="cursor:pointer;background-color:#30CE6A;" class="btn btn-info cursorcls" (click)="saveEditCMS();c(\'Close click\')">Submit</button>\n      <button type="button" style="cursor:pointer;" class="btn btn-secondary cursorcls" (click)="cancelcms();c(\'Close click\')">Close</button>\n    </div>\n</ng-template>'},LXT9:function(e,t,n){"use strict";n.r(t);var s=n("mrSG"),i=n("CcnG"),l=n("Ip0R"),a=n("PSRr"),o=n("3EpR"),r=n("gbi4"),d=n("SbLv"),c=n("sE5F"),p=n("AytR"),u=n("EVdn"),m=n("4GxJ"),g=n("wd/R"),h=function(){function e(e,t,n,s,i){this.toastr=e,this.modalService=t,this.CommonService=n,this.cookieService=s,this.http=i,this.userrows=[],this.userlist=[],this.usertemp=[],this.limits=[{key:"10",value:10},{key:"25",value:25},{key:"50",value:50},{key:"100",value:100}],this.page={size:this.limits[0].value,totalElements:0,totalPages:0,pageNumber:0},this.defsort={dir:"desc",prop:"modifieddate"},this.defsearch="",this.loading=!1,this.rowLimits=this.limits,this.limit=this.limits[0].value,this.viewuserdt={},this.serviceHost=p.a.BackendHost,this.cmslist=[],this.table_loader=!1,this.edithostlist={},this.modalOption={},this.myOptionss={},this.myOptionss1={},this.myOptionss1_start={},this.myOptionss1_edit={},this.helo=!1,this.helo1=!1,this.helo1_edit=!1,this.check=!1,this.check1=!1,this.edittoken_list={},this.editorConfig={},this.editcms={title:"",pagecontent:"",pagekey:"",content_title:"",image:"",imagesec:""},this.cmsIndx=0,this.diseditcms=!0,this.currency_submitted=!1,this.submitted=!1,this.filesToUpload1=[],this.filesToUpload2=[],this.filename1="",this.filename2="",this.imageuploadprof=!1,this.CommonService.sessioncheck(),this.CommonService.ipcheck(),this.loadcms()}return e.prototype.reset=function(){document.getElementById("idssss").value=""},e.prototype.resets=function(){document.getElementById("id_proof").value=""},e.prototype.ngOnInit=function(){this.ckeConfig={allowedContent:!1,removeButtons:"Source,Save,NewPage,DocProps,Preview,Print,Templates,document,Set language",forcePasteAsPlainText:!0}},e.prototype.loadcms=function(){var e=this;this.table_loader=!0;var t={page:this.page,sorting:this.defsort,search:this.defsearch};this.loading=!0,this.CommonService.requestData("admin/tokenlotslist",t).subscribe(function(t){e.page.totalElements=t.tokenlotscount,e.page.totalPages=e.page.totalElements/e.page.size,e.userlist=t.data,e.usertemp=e.userlist,e.userrows=e.userlist,e.loading=!1,e.table_loader=!1})},e.prototype.loaduserlist=function(e,t,n){var s=this;this.loading=!0;var i={page:e,sorting:t,search:n};this.CommonService.requestData("admin/tokenlotslist",i).subscribe(function(e){s.userlist=e.data,s.usertemp=s.userlist,s.userrows=s.userlist,s.loading=!1})},e.prototype.changeRowLimits=function(e){this.userlist=[],this.usertemp=this.userlist,this.userrows=this.userlist,this.page.size=+e.target.value,this.page.pageNumber=0,this.usertable.limit=e.target.value,this.loaduserlist(this.page,this.defsort,this.defsearch)},e.prototype.resetuserlist=function(){var e=this;this.limits=[{key:"10",value:10},{key:"25",value:25},{key:"50",value:50},{key:"100",value:100}],this.limit=this.limits[0].value,this.rowLimits=this.limits,this.page={size:this.limits[0].value,totalElements:0,totalPages:0,pageNumber:0},this.defsort={dir:"desc",prop:"createddate"},this.defsearch="";var t={page:this.page,sorting:this.defsort,search:this.defsearch};this.loading=!0,this.CommonService.requestData("admin/tokenlotslist",t).subscribe(function(t){e.page.totalElements=t.tokenlotscount,e.page.totalPages=e.page.totalElements/e.page.size,e.userlist=t.data,e.usertemp=e.userlist,e.userrows=e.userlist,e.loading=!1})},e.prototype.updateFilter=function(){var e=this;this.loading=!0;var t={page:this.page,sorting:this.defsort,search:this.defsearch};this.CommonService.requestData("admin/tokenlotslist",t).subscribe(function(t){e.page.totalElements=t.tokenlotscount,e.page.totalPages=e.page.totalElements/e.page.size,e.userlist=t.data,e.usertemp=e.userlist,e.userrows=e.userlist,e.loading=!1})},e.prototype.setPage=function(e){this.userlist=[],this.usertemp=this.userlist,this.userrows=this.userlist,this.page.pageNumber=e.offset,this.loaduserlist(this.page,this.defsort,this.defsearch)},e.prototype.onSort=function(e){this.page.pageNumber=0,this.defsort=e.sorts[0],this.loaduserlist(this.page,this.defsort,this.defsearch)},e.prototype.openCMSmodel=function(e,t,n){var s=this,i=this.userlist.filter(function(e){return-1!==e._id.indexOf(t)||!t});this.editcms=i[0],this.cmsIndx=this.userlist.indexOf(this.userrows.filter(function(e){return e._id==t})[0]),this.modalRef=this.modalService.open(e,{size:"lg"}),this.modalRef.result.then(function(e){s.closeResult="Closed with: "+e},function(e){s.closeResult="Dismissed "+s.getDismissReason(e)}),this.diseditcms=!1},e.prototype.openeditmodel=function(e,t){var n=g(t.start_date);t.start_date=n.format("YYYY/MM/DD");var s=g(t.end_date);t.end_date=s.format("YYYY/MM/DD");t.start_date,t.end_date;this.edittoken_list={designation:t.designation,price:t.price,total_supply:t.total_supply,status:t.status,location:t.location,start_date:t.start_date,end_date:t.end_date},this.modalRef=this.modalService.open(e,{size:"lg"})},e.prototype.openviewmodel=function(e,t){var n=g(t.start_date);t.start_date=n.format("YYYY/MM/DD");var s=g(t.end_date);t.end_date=s.format("YYYY/MM/DD"),this.edithostlist={designation:t.designation,price:t.price,price_btc:t.price_btc,price_eth:t.price_eth,price_usdt:t.price_usdt,total_supply:t.total_supply,status:t.status,location:t.location,start_date:t.start_date,end_date:t.end_date},this.modalRef=this.modalService.open(e,{size:"lg"})},e.prototype.openaddcherrymodel=function(e){this.modalRef=this.modalService.open(e,this.modalOption)},e.prototype.onDateChanged=function(e){0!=e.epoc?(this.helo1=!0,this.helo1_edit=!0):(this.helo1=!1,this.helo1_edit=!1,this.edithostlist.start_date=null)},e.prototype.onDate=function(e){0!=e.epoc?this.helo=!0:(this.helo=!1,this.edithostlist.end_date=null,this.helo1=!1)},e.prototype.eidtdisableUntil=function(){this.check1=!0;var e=this.userrows[this.userrows.length-1],t=new Date(e.end_date);t.setDate(t.getDate()-1);var n=this.getCopyOfOptions();n.disableUntil={year:t.getFullYear(),month:t.getMonth()+1,day:t.getDate()},this.myOptionss1_start=n},e.prototype.eidtdisableUntil_edit=function(){this.check1=!0},e.prototype.eidtdisableUnti=function(){var e=new Date(this.edithostlist.start_date.formatted);e.setDate(e.getDate()-1);var t=this.getCopyOfOptions();t.disableUntil={year:e.getFullYear(),month:e.getMonth()+1,day:e.getDate()+1},this.myOptionss1=t},e.prototype.eidtdisableUnti_edit=function(){var e=new Date(this.edittoken_list.start_date.formatted);e.setDate(e.getDate()-1);var t=this.getCopyOfOptions();t.disableUntil={year:e.getFullYear(),month:e.getMonth()+1,day:e.getDate()},this.myOptionss1_edit=t},e.prototype.edittoken_result=function(){var e=this;this.submitted=!0,this.edittoken_list.start_date=this.edittoken_list.start_date.formatted,this.edittoken_list.end_date=this.edittoken_list.end_date.formatted,this.CommonService.requestData("admin/updatetokenlot",this.edittoken_list).subscribe(function(t){1==t.status?(e.toastr.successToastr("Token lots field updated","Success"),e.modalRef.close(),e.loadcms()):e.toastr.errorToastr("While updating","Error")})},e.prototype.descimalkey=function(e){var t=e.which?e.which:e.keyCode;return!(46!=t&&t>31&&(t<48||t>57))},e.prototype.getCopyOfOptions=function(){return JSON.parse(JSON.stringify(this.myOptionss))},e.prototype.getDismissReason=function(e){return e===m.a.ESC?"by pressing ESC":e===m.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: ${reason}"},e.prototype.changeeditcmsevent=function(e){var t=u("#cmspagetitle");t.val()?t.removeClass("has-error").addClass("has-success"):(t.removeClass("has-success").addClass("has-error"),e.preventDefault()),t.val()&&""!=this.editcms.pagecontent&&""!=this.editcms.content_title?this.diseditcms=!1:this.diseditcms=!0},e.prototype.add_token_result=function(){var e=this;this.edithostlist.start_date=this.edithostlist.start_date.formatted,this.edithostlist.end_date=this.edithostlist.end_date.formatted,this.edithostlist.total_supply=Number(this.edithostlist.total_supply),this.edithostlist.price=Number(this.edithostlist.price),this.edithostlist.price_btc=Number(this.edithostlist.price_btc),this.edithostlist.price_eth=Number(this.edithostlist.price_eth),this.edithostlist.price_usdt=Number(this.edithostlist.price_usdt),this.CommonService.requestData("admin/inserttokenlot",this.edithostlist).subscribe(function(t){e.toastr.successToastr(t.msg,"Success!"),e.modalRef.close()}),this.loadcms()},e.prototype.onSubmitData=function(){var e=this,t=this.editcms.pagecontent.replace(/&nbsp; /g,"").replace(/&nbsp;/g,"").replace("<p>","").replace("</p>","").replace(/ /g,"").replace(/&lt;/g,"<").replace(/&gt;/g,">");""==(t=t.toString()).trim()?(this.toastr.errorToastr("Please fill all the field properly!","Error"),this.editcms.pagecontent=""):this.CommonService.requestData("admin/editstatic",this.editcms).subscribe(function(t){e.userlist[e.cmsIndx]=t.data[0],e.userrows=e.userlist,e.toastr.successToastr("CMS details are Updated!","Success"),e.modalRef.close()})},e.prototype.cancelcms=function(){this.loaduserlist(this.page,this.defsort,this.defsearch)},e.prototype.fileChangeEvent=function(e,t){this.value=t,this.imageuploadprof=!1;var n=e.target.files[0].type;this.filepath=n,"image/jpeg"==n||"image/gif"==n||"image/jpg"==n||"image/png"==n?("image"==this.value&&(this.filename1=e.target.files[0].name,this.im=e.target.im,this.filesToUpload1=e.target.files),"imagesec"==this.value&&(this.filename2=e.target.files[0].name,this.im=e.target.im,this.filesToUpload2=e.target.files)):(this.toastr.errorToastr("Please choose a right file!","Error"),"image"==this.value&&(this.filename1="",this.im="",this.filesToUpload1=[]),this.reset(),"imagesec"==this.value&&(this.filename2="",this.im="",this.filesToUpload2=[]),this.resets())},e.prototype.saveEditCMS=function(){for(var e=this,t=new FormData,n=this.filesToUpload1,s=this.filesToUpload2,i=0;i<n.length;i++){var l=this.filesToUpload1[i].name.split("."),a="image."+l[l.length-1];t.append("uploads[]",this.filesToUpload1[i],a)}for(var o=0;o<s.length;o++){var r=this.filesToUpload2[o].name.split("."),d="imagesec."+r[r.length-1];t.append("uploads[]",this.filesToUpload2[o],d)}this.http.post(this.serviceHost+"uploadsmulti",t).map(function(e){return e.json()}).subscribe(function(t){if(t.status){for(var n=0;n<t.value.length;n++){var s=t.value[n],i=s.split(",");if("image"==i[0]){var l=i[1];e.editcms.image=l}if("imagesec"==i[0]){s.Location;e.editcms.imagesec=s.Location}}e.onSubmitData()}else e.onSubmitData()})},e.ctorParameters=function(){return[{type:o.a},{type:m.b},{type:r.a},{type:d.a},{type:c.b}]},s.c([Object(i.nb)(a.a,{static:!1}),s.f("design:type",a.a)],e.prototype,"usertable",void 0),e=s.c([Object(i.n)({selector:"app-static",template:n("KWVS"),styles:[n("eequ")]}),s.f("design:paramtypes",[o.a,m.b,r.a,d.a,c.b])],e)}(),f=n("ZYCi"),b=[{path:"",component:h,data:{title:"static"}}],v=function(){function e(){}return e=s.c([Object(i.K)({declarations:[],imports:[l.b,f.d.forChild(b)],exports:[f.d]})],e)}(),y=n("gIcY"),_=n("fH49"),x=n("8sr8");n.d(t,"StaticModule",function(){return k});var k=function(){function e(){}return e=s.c([Object(i.K)({declarations:[h],imports:[l.b,v,a.b,y.a,_.a,x.MyDatePickerModule]})],e)}()},eequ:function(e,t){e.exports=".table-loaders:after {\n  position: absolute;\n  top: 0;\n  left: 15px;\n  right: 15px;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  background-image: url('5.7b330de345c6ea75b4bb.gif');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 50px 50px;\n  content: \"\";\n}\n\n.txt-color {\n  color: red;\n}"}}]);