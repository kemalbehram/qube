(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{CPSn:function(t,e){t.exports=""},jJAP:function(t,e,r){"use strict";r.r(e);var n=r("mrSG"),a=r("CcnG"),s=r("Ip0R"),o=r("3EpR"),d=r("gbi4"),l=function(){function t(t,e){this.commonService=t,this.toastr=e,this.admindetails={},this.tfsqrcode="",this.admin={},this.isValid2=!1,this.isValid3=!1}return t.prototype.numberOnly=function(t){var e=t.which?t.which:t.keyCode;return!(e>31&&(e<48||e>57))},t.prototype.ngOnInit=function(){var t=this;this.commonService.sessioncheck(),this.commonService.ipcheck(),this.commonService.getData("admin/adminDetails").subscribe(function(e){t.admindetails=e.data,t.tfsqrcode=t.admindetails.tfaurl})},t.prototype.savepwd=function(){var t=this;if(this.admin.newpwdval==this.admin.reenterpwdval){var e={currentpwd:this.admin.currentpwdnew,newpwd:this.admin.newpwdval,confirmpwd:this.admin.reenterpwdval};this.commonService.requestData("admin/changepassword",e).subscribe(function(e){0==e.status?t.toastr.errorToastr(e.error,"Oops!"):t.toastr.successToastr("password changed successfully","Success!")})}else this.toastr.errorToastr("password doesnt match","Oops!")},t.prototype.savetfa=function(){var t=this,e={tfacode:this.admin.tfacode,secret:this.admindetails.secret};this.commonService.requestData("admin/tfaupdate",e).subscribe(function(e){0==e.status?t.toastr.errorToastr(e.message,"Oops!"):t.toastr.successToastr(e.message,"Success!")})},t.ctorParameters=function(){return[{type:d.a},{type:o.a}]},t=n.c([Object(a.n)({selector:"app-changepassword",template:r("plrC"),styles:[r("CPSn")]}),n.f("design:paramtypes",[d.a,o.a])],t)}(),i=r("ZYCi"),c=[{path:"",component:l,data:{title:"changepassword"}}],p=function(){function t(){}return t=n.c([Object(a.K)({declarations:[],imports:[s.b,i.d.forChild(c)],exports:[i.d]})],t)}(),u=r("gIcY");r.d(e,"ChangepasswordModule",function(){return f});var f=function(){function t(){}return t=n.c([Object(a.K)({declarations:[l],imports:[s.b,p,u.a]})],t)}()},plrC:function(t,e){t.exports='\t<div class="card">\n\t\t <div class="card-header">\n          <strong>Change password</strong> \n        </div>\n        <div class="card-body">\n        \t\n\t<form   #pwdform="ngForm"  >\n\t\t\t      \t\t\t<div class="form-group row">\n\t\t\t\t              <div class="col-2">\n\t\t\t\t              </div>\n\t\t\t\t              <div class="col-8">\n\t\t\t\t                <div class="form-group row">\n\t\t\t\t                  <label for="currentpwdnew" class="col-4 col-form-label">Current Password</label>\n\t\t\t\t                  <input type="password" name="currentpwdnew" id="currentpwdnew" [(ngModel)]="admin.currentpwdnew" #currentpwd="ngModel" class="form-control" placeholder="Current Password" [class.form-control-danger]="currentpwd.invalid && currentpwd.touched" required autofocus>\n\t\t\t\t\t\t          <small style="color: red;" class="form-text error" *ngIf="currentpwd.invalid && currentpwd.touched && currentpwd.errors?.required">\n\t\t\t\t\t\t            \tCurrent Password is required!\n\t\t\t\t\t\t          </small>\n                            \n\t\t\t\t                </div>\n\t\t\t\t                <div class="form-group row">\n\t\t\t\t                  <label for="example-text-input" class="col-4 col-form-label">New Password</label>\n\t\t\t\t                   <input type="password" name="newpwd" id="newpwd" [(ngModel)]="admin.newpwdval" class="form-control" #newpwdval="ngModel" class="form-control" placeholder="New Password"\n\t\t\t\t                     pattern="^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])(?!.*\\s).{8,}$"\n\t\t\t\t\t\t              [minlength]="8"\n\t\t\t\t\t\t              [maxlength]="20"\n\t\t\t\t                   [class.form-control-danger]="newpwdval.invalid && newpwdval.touched" required  autofocus >\n\t\t\t\t\t\t         \t<small  style="color: red;" class="form-text error" *ngIf="newpwdval.invalid && newpwdval.touched && newpwdval.errors?.required">\n\t\t\t\t\t\t            \tNew Password is required!\n\t\t\t\t\t\t\t         </small>\n\t\t\t\t\t\t\t         <small style="color: red;" class="form-text error" *ngIf="newpwdval.invalid && newpwdval.touched && newpwdval.errors?.pattern">\n\t\t\t\t\t\t            \tNew Password should be 8 character ,atleast 1 Upper case,1 Lower Case 1 Number and 1 Special character.Space are not allowed\n\t\t\t\t\t\t\t         </small>\n\t\t\t\t\t\t\t      \n\t\t\t\t                </div>\n\t\t\t\t                <div class="form-group row">\n\t\t\t\t                  <label for="example-text-input" class="col-4 col-form-label">Re-enter Password</label>\n\t\t\t\t                  <input name="reenterpwd" [(ngModel)]="admin.reenterpwdval" type="password" id="reenterpwd" class="form-control" placeholder="Re-enter Password" #reenterpwdval="ngModel" [class.form-control-danger]="(reenterpwdval.invalid || newpwdval.value != reenterpwdval.value) && reenterpwdval.touched" required autofocus>\n\t\t\t\t\t\t          <small  style="color: red;" class="form-text error" *ngIf="reenterpwdval.invalid && reenterpwdval.touched && reenterpwdval.errors?.required">\n\t\t\t\t\t\t            Password confirmation is required!\n\t\t\t\t\t\t          </small>\n\t\t\t\t\t\t          <small  style="color: red;" class="form-text error" *ngIf="reenterpwdval.touched && newpwdval.value != reenterpwdval.value && !reenterpwdval.errors?.required">\n\t\t\t\t\t\t            Password does not match the confirm password.\n\t\t\t\t\t\t          </small>\n\t\t\t\t                </div>\n\n\t\t\t\t               </div>\n\t\t\t\t            </div>\n\t\t\t\t       \t</form>\n\n\t\t\t      \t</div>\n\t\t\t\t\t<div class="card-footer" style="text-align: center;">\n\t\t\t\t           <button type="button" *ngIf="!isValid2"  style="cursor:pointer;" class="btn btn-info cursorcls" \n\t\t\t\t           [disabled]="!pwdform.valid" (click)="pwdform.valid && savepwd();pwdform.reset()">Submit</button>\n\n\t\t\t\t           <h6 *ngIf="isValid2">Loading... <i class="fa fa-spinner fa-spin"></i> </h6>\n\t\t\t\t      </div>\n\t\t\t      \t</div>\n\n\t\t\t      \t\t<div class="card">\n\t\t <div class="card-header">\n          <strong>TFA Settings</strong> \n        </div>\n        \n        \t<div class="card-body">\n        \t\n\t\t\t\t\t\t<form   #tfaform="ngForm"  >\n\t\t\t\t\t\t<div class="form-group row">\n\t\t\t\t\t\t  <div class="col-2">\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  <div class="col-8" *ngIf="admindetails.tfastatus == \'Deactive\'">\n\t\t\t\t\t\t    <div class="form-group row">\n\t\t\t\t\t\t      <label for="currentpwdnew" class="col-4 col-form-label">QR Code :</label>\n\t\t\t\t\t\t      <img src="{{tfsqrcode}}" >\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t    <div class="form-group row">\n\t\t\t\t\t\t      <label for="example-text-input" class="col-4 col-form-label">Secret Code : </label> {{admindetails.secret}}\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t    <div class="form-group row">\n\t\t\t\t\t\t      <label for="example-text-input" class="col-4 col-form-label">TFA Code</label>\n\t\t\t\t\t\t      <input name="tfacode" [(ngModel)]="admin.tfacode" type="text" id="tfacode" class="form-control" placeholder="TFA Code" #tfacode="ngModel" [class.form-control-danger]="(tfacode.invalid || tfacode.value != tfacode.value) && tfacode.touched" required autofocus onkeydown="javascript: return event.keyCode == 69 ? false : true" (keypress)="numberOnly($event)">\n\t\t\t\t\t\t      <small  style="color: red;" class="form-text error" *ngIf="tfacode.invalid && tfacode.touched && tfacode.errors?.required">\n\t\t\t\t\t\t        TFA is required!\n\t\t\t\t\t\t      </small>\n\t\t\t\t\t\t      \n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  <div class="col-8" *ngIf="admindetails.tfastatus == \'Active\'">\n\t\t\t\t\t\t    \n\t\t\t\t\t\t    <div class="form-group row">\n\t\t\t\t\t\t      <label for="example-text-input" class="col-4 col-form-label">TFA Status : </label> {{admindetails.tfastatus}}\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t    \n\t\t\t\t\t\t  </div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\n\t\t\t      \t</div>\n\t\t\t\t\t<div class="card-footer" style="text-align: center;" *ngIf="admindetails.tfastatus == \'Deactive\'">\n\t\t\t\t           <button type="button" *ngIf="!isValid3"  style="cursor:pointer;" class="btn btn-info cursorcls" \n\t\t\t\t           [disabled]="!tfaform.valid" (click)="tfaform.valid && savetfa();tfaform.reset()">Submit</button>\n\n\t\t\t\t           <h6 *ngIf="isValid3">Loading... <i class="fa fa-spinner fa-spin"></i> </h6>\n\t\t\t\t      </div>\n\t\t\t</div>'}}]);