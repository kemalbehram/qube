(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"2kgi":function(t,e){t.exports=".ngx-datatable.scroll-horz .datatable-body {\n  overflow-x: hidden !important;\n}\n\n.txt-color {\n  color: red;\n}\n\n.loaders:after {\n  position: absolute;\n  top: 0;\n  left: 15px;\n  right: 15px;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  background-image: url('5.7b330de345c6ea75b4bb.gif');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 50px 50px;\n  content: \"\";\n}\n\n.card.loaders:after {\n  position: absolute;\n  top: 0;\n  left: 15px;\n  right: 15px;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  background-image: url('5.7b330de345c6ea75b4bb.gif');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 50px 50px;\n  content: \"\";\n}"},OhfR:function(t){t.exports={reward_contract:"0x50186a21F9bA08E9FC9B646E23A91E5152Cc37d2",token_contract:"0xFda5b02Dec916bc5a00D5bAec3B85bbC5BF8A54E"}},VQ1v:function(t,e,n){"use strict";n.r(e);var a=n("mrSG"),i=n("CcnG"),s=n("Ip0R"),r=n("PSRr"),o=n("3EpR"),l=n("gbi4"),u=n("4GxJ"),c=n("SbLv"),p=n("sE5F"),d=n("AytR"),m=n("OhfR"),y=n("xB9L"),b=n("izgN"),h=n("fJi7"),f=function(){function t(t,e,n,a,i){this.toastr=t,this.modalService=e,this.CommonService=n,this.cookieService=a,this.http=i,this.fcurrency="",this.symbol=[{values:1,symbolval:"+(Plus)"},{values:2,symbolval:"-(Minus)"}],this.userrows=[],this.userlist=[],this.usertemp=[],this.limits=[{key:"10",value:10},{key:"25",value:25},{key:"50",value:50},{key:"100",value:100}],this.page={size:this.limits[0].value,totalElements:0,totalPages:0,pageNumber:0},this.defsort={dir:"desc",prop:"createddate"},this.defsearch="",this.loading=!1,this.rowLimits=this.limits,this.limit=this.limits[0].value,this.viewuserdt={},this.Datas={},this.currencyData=[],this.serviceHost=d.a.BackendHost,this.createpairlist={},this.dataLoader=!1,this.showbase_coin=!1,this.showbase_token=!1,this.FromSubmit=!1,this.submitdata={},this.from_currency=[],this.edithostlist={total_amt:"",_id:"",pair:"",buylimit:"",buylimitvalue:"",buyrate:"",selllimit:"",selllimitvalue:"",sellrate:"",marketPrice:"",max_amt:"",fee:"",fee_type:"",min_amt:""},this.submitted=!1,this.bannersvalue={},this.banner="",this.reward_token_contract="",this.pair_check_stake=!1,this.ok_check_stake=!1,this.CommonService.sessioncheck(),this.CommonService.ipcheck(),this.enable_metamask()}return t.prototype.isNumberKey=function(t){var e=t.which?t.which:t.keyCode;return e>34&&e<41||e>47&&e<58||46==e||8==e||9==e},t.prototype.ngOnInit=function(){this.loadpairs(),this.loadcurrency()},t.prototype.loadcurrency=function(){var t=this;this.CommonService.getData("currency/get_currency").subscribe(function(e){return a.b(t,void 0,void 0,function(){var t=this;return a.e(this,function(n){switch(n.label){case 0:return this.currencyData=e.msg,[4,this.currencyData.map(function(e){"token"===e.currency_type&&t.from_currency.push(e)})];case 1:return n.sent(),[2]}})})})},t.prototype.enable_metamask=function(){console.clear(),console.log("enable ---\x3e metamask "),void 0!==window.web3?this.web3=window.web3.currentProvider:this.web3=new window.Web3.providers.HttpProvider("https://ropsten.infura.io/v3/ace26df5eee341b3ab52f89fd7f56d49"),window.web3=new window.Web3(window.ethereum),window.ethereum},t.prototype.loadpairs=function(){var t=this;this.dataLoader=!0;var e={page:this.page,sorting:this.defsort,search:this.defsearch};this.loading=!0,this.CommonService.requestData("admin/pairslist",e).subscribe(function(e){t.page.totalElements=e.pairscount,t.page.totalPages=t.page.totalElements/t.page.size,t.userlist=e.data,t.usertemp=t.userlist,t.userrows=t.userlist,t.loading=!1,t.dataLoader=!1})},t.prototype.loaduserlist=function(t,e,n){var a=this;this.loading=!0;var i={page:t,sorting:e,search:n};this.CommonService.requestData("admin/pairslist",i).subscribe(function(t){a.userlist=t.data,a.usertemp=a.userlist,a.userrows=a.userlist,a.loading=!1})},t.prototype.bannermodel=function(t,e){this.Datas=e,this.modalRef=this.modalService.open(t,{size:"lg"})},t.prototype.changeRowLimits=function(t){this.userlist=[],this.usertemp=this.userlist,this.userrows=this.userlist,this.page.size=+t.target.value,this.page.pageNumber=0,this.usertable.limit=t.target.value,this.loaduserlist(this.page,this.defsort,this.defsearch)},t.prototype.resetuserlist=function(){var t=this;this.limits=[{key:"10",value:10},{key:"25",value:25},{key:"50",value:50},{key:"100",value:100}],this.limit=this.limits[0].value,this.rowLimits=this.limits,this.page={size:this.limits[0].value,totalElements:0,totalPages:0,pageNumber:0},this.defsort={dir:"desc",prop:"createddate"},this.defsearch="";var e={page:this.page,sorting:this.defsort,search:this.defsearch};this.loading=!0,this.CommonService.requestData("admin/pairslist",e).subscribe(function(e){t.page.totalElements=e.pairscount,t.page.totalPages=t.page.totalElements/t.page.size,t.userlist=e.data,t.usertemp=t.userlist,t.userrows=t.userlist,t.loading=!1})},t.prototype.updateFilter=function(){var t=this;this.loading=!0;var e={page:this.page,sorting:this.defsort,search:this.defsearch};this.CommonService.requestData("admin/pairslist",e).subscribe(function(e){t.page.totalElements=e.pairscount,t.page.totalPages=t.page.totalElements/t.page.size,t.userlist=e.data,t.usertemp=t.userlist,t.userrows=t.userlist,t.loading=!1})},t.prototype.setPage=function(t){this.userlist=[],this.usertemp=this.userlist,this.userrows=this.userlist,this.page.pageNumber=t.offset,this.loaduserlist(this.page,this.defsort,this.defsearch)},t.prototype.onSort=function(t){this.page.pageNumber=0,this.defsort=t.sorts[0],this.loaduserlist(this.page,this.defsort,this.defsearch)},t.prototype.openeditmodel=function(t,e){var n=e.pair.split("/");this.fcurrency=n[0],this.edithostlist={total_amt:e.total_amt,_id:e._id,pair:e.pair,buylimit:e.buylimit,buylimitvalue:e.buylimitvalue,buyrate:e.buyrate,selllimit:e.selllimit,selllimitvalue:e.selllimitvalue,sellrate:e.sellrate,marketPrice:e.marketPrice,max_amt:e.max_amt,fee:e.fee,fee_type:e.fee_type,min_amt:e.min_amt},this.modalRef=this.modalService.open(t,{size:"lg"})},t.prototype.reformdata=function(){this.createpairlist={},this.showbase_coin=!1,this.showbase_token=!1},t.prototype.checkradioChange=function(t){"Base Currency Coin"==t?(this.showbase_coin=!0,this.showbase_token=!1):(this.showbase_token=!0,this.showbase_coin=!1)},t.prototype.setdecimal=function(){return a.b(this,void 0,void 0,function(){var t,e,n;return a.e(this,function(a){switch(a.label){case 0:return t=this.createpairlist.fromCurrency_address,e=h,[4,new window.web3.eth.Contract(e,t).methods.decimals().call()];case 1:return n=a.sent(),this.createpairlist.fromCurrency_decimal=n,[2]}})})},t.prototype.opencreatepairmodel=function(t){return a.b(this,void 0,void 0,function(){return a.e(this,function(e){return this.modalRef=this.modalService.open(t,{size:"lg"}),{msg:1},[2]})})},t.prototype.change_symbol=function(t){this.createpairlist.pairvalue=t.target.value+"-ETH"},t.prototype.onSubmitData=function(t){return a.b(this,void 0,void 0,function(){var t=this;return a.e(this,function(e){switch(e.label){case 0:return this.createpairlist.fromCurrency==this.createpairlist.toCurrency?[2,this.toastr.errorToastr("Please select different From and To currencies","Oops")]:[4,this.CommonService.requestData("admin/createpair",this.createpairlist).subscribe(function(e){e.status?t.toastr.successToastr(e.msg,"Success!"):t.toastr.errorToastr(e.msg,"Oops"),t.createpairlist={},t.loadpairs(),t.modalRef.close()})];case 1:return e.sent(),[2]}})})},t.prototype.addContractmodel=function(t){return a.b(this,void 0,void 0,function(){var e,n,i,s,r,o;return a.e(this,function(l){switch(l.label){case 0:return e=this,t.contract_add_status?[3,2]:(n=m.sammaster_contract,i=y,[4,(s=new window.web3.eth.Contract(i,n)).methods.owner().call()]);case 1:return r=l.sent(),o=t.pair_address,s.methods.add(100,o,!0).send({from:r}).then(function(n){return a.b(this,void 0,void 0,function(){var i;return a.e(this,function(a){switch(a.label){case 0:return n.status?[4,s.methods.poolLength().call()]:[3,2];case 1:(i=a.sent())&&e.CommonService.requestData("farming/updateAddContractStatus",{id:t._id,poolId:i-1}).subscribe(function(t){n.status&&e.loadpairs()}),a.label=2;case 2:return e.toastr.successToastr("Your requset has been send successfully","Success!"),[2]}})})}),[3,3];case 2:this.toastr.errorToastr("Already Contract was added for this pair"),l.label=3;case 3:return[2]}})})},t.prototype.buycalculation=function(t){var e=t.marketPrice*t.buylimitvalue/100;if("plus"==t.buylimit){var n=t.marketPrice+e;t.buyrate=n}else if("minus"==t.buylimit){var a=t.marketPrice-e;t.buyrate=a}},t.prototype.sellcalculation=function(t){var e=t.marketPrice*t.selllimitvalue/100;if("plus"==t.selllimit){var n=t.marketPrice+e;t.sellrate=n}else if("minus"==t.selllimit){var a=t.marketPrice-e;t.sellrate=a}},t.prototype.buyratecalculation=function(t){var e=t.marketPrice*t.buylimitvalue/100;if("plus"==t.buylimit){var n=t.marketPrice+e;t.buyrate=n}else if("minus"==t.buylimit){var a=t.marketPrice-e;t.buyrate=a}},t.prototype.sellratecalculation=function(t){var e=t.marketPrice*t.selllimitvalue/100;if("plus"==t.selllimit){var n=t.marketPrice+e;t.sellrate=n}else if("minus"==t.selllimit){var a=t.marketPrice-e;t.sellrate=a}},t.prototype.editpairs=function(t){var e=this;this.submitted=!0,this.CommonService.requestData("admin/pairsupdate",this.edithostlist).subscribe(function(t){1==t.status?(e.toastr.successToastr("Pairs field updated","Success"),e.modalRef.close(),e.loadpairs()):e.toastr.errorToastr("While updating","Error")})},t.prototype.changehost=function(t,e){this.bannersvalue=e,this.modalRef=this.modalService.open(t,{size:"sm"})},t.prototype.changebannerStatus=function(t){var e=this;"Active"==t.status?this.bannersvalue="Deactive":this.bannersvalue="Active",this.currencyObj={_id:t._id,status:this.bannersvalue},this.CommonService.requestData("admin/pairsstatus",this.currencyObj).subscribe(function(t){t?(e.toastr.successToastr("Pair status changed Successfully!","Success"),e.cookieService.get("role"),e.loadpairs()):e.loadpairs()})},t.prototype.decimalrounds=function(t,e){return this.CommonService.testrounds(+t,e)},t.prototype.sleep=function(t){return new Promise(function(e){return setTimeout(e,t)})},t.prototype.check_stake=function(t){return a.b(this,void 0,void 0,function(){var e,n=this;return a.e(this,function(a){switch(a.label){case 0:return e={pair:t},[4,this.CommonService.requestData("admin/check_cherry",e).subscribe(function(t){n.pair_check_stake=!0,1==t.status?n.ok_check_stake=!0:n.ok_check_stake=!1})];case 1:return a.sent(),[2]}})})},t.prototype.willadd=function(){return a.b(this,void 0,void 0,function(){var t,e,n,i,s,r=this;return a.e(this,function(o){switch(o.label){case 0:return this.submitdata.pair=this.Datas.pair,this.submitdata.pair_address=this.Datas.pair_address,this.submitdata.fromCurrency=this.Datas.fromCurrency,this.submitdata.toCurrency=this.Datas.toCurrency,this.submitdata.fromCurrency_address=this.Datas.fromCurrency_address,this.submitdata.toCurrency_address=this.Datas.toCurrency_address,this.submitdata.fromCurrency_type=this.Datas.fromCurrency_type,this.submitdata.toCurrency_type=this.Datas.toCurrency_type,[4,window.web3.eth.getAccounts()];case 1:return t=o.sent(),e=t[0],console.clear(),this.check_stake(this.Datas.pair),[4,this.sleep(2e3)];case 2:return o.sent(),void 0!==e?[3,3]:(this.toastr.errorToastr("Kindly login metamask !!!","OOPS!"),[3,12]);case 3:return this.pair_check_stake?this.ok_check_stake?(e=e.toLowerCase(),[4,(n=new window.web3.eth.Contract(b,m.reward_contract)).methods.owner().call()]):[3,9]:[3,11];case 4:return o.sent().toLowerCase()!=e?[3,7]:(i=this.Datas.pair_address,s=this.Datas.rewards,[4,window.web3.utils.toWei(s.toString(),"ether")]);case 5:return o.sent(),this.submitdata.amount=s,this.submitdata.total_value=s,this.total_supply_amount=s,this.submitdata.pair_address=i,this.submitdata.type="pair",[4,n.methods.add(100,i,!1).send({from:e}).on("transactionHash",function(t){}).on("receipt",function(t){return a.b(r,void 0,void 0,function(){var e=this;return a.e(this,function(i){switch(i.label){case 0:return t?[4,this.sleep(1e3)]:[3,2];case 1:return i.sent(),n.methods.poolLength().call(function(n,i){return a.b(e,void 0,void 0,function(){var e=this;return a.e(this,function(a){switch(a.label){case 0:return n?(this.toastr.errorToastr("Something went to wrong. Please try again later"),[3,3]):[3,1];case 1:return this.submitdata.rewardedaddresss=m.reward_contract,this.reward_token_contract=m.reward_contract,this.submitdata.reward_token_contract=m.token_contract,this.submitdata.poolId=i-1,this.submitdata.txhash=t.transactionHash,[4,this.CommonService.requestData("admin/insert_cherry",this.submitdata).subscribe(function(t){1==t.status?e.toastr.successToastr("Requset has been completed","Success"):e.toastr.errorToastr("Something went to wrong! Please try again later.","Error")})];case 2:a.sent(),a.label=3;case 3:return[2]}})})}),[3,3];case 2:this.toastr.errorToastr("Something went to wrong!","Error"),i.label=3;case 3:return[2]}})})}).on("confirmation",function(t,e){}).on("error",function(t){(t.message="MetaMask Tx Signature: User denied transaction signature")?r.toastr.errorToastr("Transaction Rejected!!!","OOPS!"):r.toastr.errorToastr("Something went wrong try after Sometime !!!","OOPS!"),r.dataLoader=!1})];case 6:return o.sent(),[3,8];case 7:this.toastr.errorToastr("Kindly use authorized account !!!","OOPS!"),o.label=8;case 8:return[3,10];case 9:this.toastr.errorToastr("Already staked","OOPS!"),o.label=10;case 10:return[3,12];case 11:this.check_stake(this.Datas.pair),o.label=12;case 12:return[2]}})})},t.prototype.willadd1234=function(){return a.b(this,void 0,void 0,function(){var t,e,n,i,s,r=this;return a.e(this,function(o){switch(o.label){case 0:return this.submitdata.pair=this.Datas.pair,this.submitdata.pair_address=this.Datas.pair_address,this.submitdata.fromCurrency=this.Datas.fromCurrency,this.submitdata.toCurrency=this.Datas.toCurrency,this.submitdata.fromCurrency_address=this.Datas.fromCurrency_address,this.submitdata.toCurrency_address=this.Datas.toCurrency_address,this.submitdata.fromCurrency_type=this.Datas.fromCurrency_type,this.submitdata.toCurrency_type=this.Datas.toCurrency_type,[4,window.web3.eth.getAccounts()];case 1:return t=o.sent(),e=t[0],console.clear(),[4,this.sleep(2e3)];case 2:return o.sent(),void 0!==e?[3,3]:(this.toastr.errorToastr("Kindly login metamask !!!","OOPS!"),[3,7]);case 3:return console.log(" for this.pair_check_stake ----\x3e",this.pair_check_stake),e=e.toLowerCase(),console.log(" for cur_address ----\x3e",e),[4,(n=new window.web3.eth.Contract(b,m.reward_contract)).methods.owner().call()];case 4:return o.sent().toLowerCase()!=e?[3,6]:(i=this.Datas.pair_address,s=this.Datas.rewards,[4,window.web3.utils.toWei(s.toString(),"ether")]);case 5:return o.sent(),this.submitdata.amount=s,this.submitdata.total_value=s,this.total_supply_amount=s,this.submitdata.pair_address=i,this.submitdata.type="pair",n.methods.poolLength().call(function(t,e){return a.b(r,void 0,void 0,function(){var n=this;return a.e(this,function(a){switch(a.label){case 0:return t?(this.toastr.errorToastr("Something went to wrong. Please try again later"),[3,3]):[3,1];case 1:return this.submitdata.rewardedaddresss=m.reward_contract,this.reward_token_contract=m.reward_contract,this.submitdata.reward_token_contract=m.token_contract,this.submitdata.poolId=e-1,this.submitdata.txhash="0x39ef2167deda2f431ce00a7db38efa29b846e5b13cbc5eb507bd3ed0689fdb30",console.log(" this.submitdata 777 ----\x3e ",this.submitdata),[4,this.CommonService.requestData("admin/insert_cherry",this.submitdata).subscribe(function(t){1==t.status?n.toastr.successToastr("Requset has been completed","Success"):n.toastr.errorToastr("Something went to wrong! Please try again later.","Error")})];case 2:a.sent(),a.label=3;case 3:return[2]}})})}),[3,7];case 6:this.toastr.errorToastr("Kindly use authorized account !!!","OOPS!"),o.label=7;case 7:return[2]}})})},t.ctorParameters=function(){return[{type:o.a},{type:u.b},{type:l.a},{type:c.a},{type:p.b}]},a.c([Object(i.nb)(r.a,{static:!1}),a.f("design:type",r.a)],t.prototype,"usertable",void 0),t=a.c([Object(i.n)({selector:"app-pairs",template:n("xIbP"),styles:[n("2kgi")]}),a.f("design:paramtypes",[o.a,u.b,l.a,c.a,p.b])],t)}(),v=n("ZYCi"),g=[{path:"",component:f,data:{title:"pairs"}}],w=function(){function t(){}return t=a.c([Object(i.K)({declarations:[],imports:[s.b,v.d.forChild(g)],exports:[v.d]})],t)}(),x=n("gIcY");n.d(e,"PairsModule",function(){return k});var k=function(){function t(){}return t=a.c([Object(i.K)({declarations:[f],imports:[s.b,w,r.b,x.a,p.c]})],t)}()},izgN:function(t){t.exports=[{inputs:[{internalType:"contract QubeToken",name:"_Qube",type:"address"},{internalType:"address",name:"_devAddr",type:"address"},{internalType:"uint256",name:"_QubeStartBlock",type:"uint256"},{internalType:"uint256",name:"_startBlock",type:"uint256"},{internalType:"uint256",name:"_bonusEndBlock",type:"uint256"},{internalType:"uint256",name:"_bonusBeforeBulkBlockSize",type:"uint256"},{internalType:"uint256",name:"_bonusBeforeCommonDifference",type:"uint256"},{internalType:"uint256",name:"_bonusEndCommonDifference",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EmergencyWithdraw",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"},{inputs:[],name:"Qube",outputs:[{internalType:"contract QubeToken",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"QubeBonusEndBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"QubeStartBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"accQubePerShareMultiple",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"address",name:"_pair",type:"address"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"bonusBeforeBulkBlockSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bonusBeforeCommonDifference",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bonusEndBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bonusEndBulkBlockSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bonusEndCommonDifference",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_pair",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_devAddr",type:"address"}],name:"dev",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"devAddr",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_pair",type:"address"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_pair",type:"address"}],name:"existsPool",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_from",type:"uint256"},{internalType:"uint256",name:"_to",type:"uint256"}],name:"getTotalRewardInfo",outputs:[{internalType:"uint256",name:"totalReward",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_from",type:"uint256"},{internalType:"uint256",name:"_to",type:"uint256"},{internalType:"uint256",name:"_QubeInitBlock",type:"uint256"},{internalType:"uint256",name:"_bulkBlockSize",type:"uint256"},{internalType:"uint256",name:"_commonDifference",type:"uint256"}],name:"getTotalRewardInfoInSameCommonDifference",outputs:[{internalType:"uint256",name:"totalReward",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"maxRewardBlockNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_pair",type:"address"},{internalType:"address",name:"_user",type:"address"}],name:"pendingQube",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolAddresses",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"poolInfoMap",outputs:[{internalType:"uint256",name:"allocPoint",type:"uint256"},{internalType:"uint256",name:"lastRewardBlock",type:"uint256"},{internalType:"uint256",name:"accQubePerShare",type:"uint256"},{internalType:"bool",name:"exists",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"poolLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"poolUserInfoMap",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_pair",type:"address"},{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"set",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalAllocPoint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_pair",type:"address"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_pair",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}]},xB9L:function(t){t.exports=[{inputs:[{internalType:"contract samuraiXToken",name:"_samx",type:"address"},{internalType:"uint256",name:"_samxPerBlock",type:"uint256"},{internalType:"uint256",name:"_startBlock",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EmergencyWithdraw",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"},{inputs:[],name:"BONUS_MULTIPLIER",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"contract IERC20",name:"_lpToken",type:"address"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_from",type:"uint256"},{internalType:"uint256",name:"_to",type:"uint256"}],name:"getMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"lpTokenStatus",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingSamx",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolInfo",outputs:[{internalType:"contract IERC20",name:"lpToken",type:"address"},{internalType:"uint256",name:"allocPoint",type:"uint256"},{internalType:"uint256",name:"lastRewardBlock",type:"uint256"},{internalType:"uint256",name:"accSamxPerShare",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"poolLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"samx",outputs:[{internalType:"contract samuraiXToken",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"samxPerBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"set",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalAllocPoint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}]},xIbP:function(t,e){t.exports='<div class="card">\n    <div class="card-header" style="background-color:#2f353a;color:#33adff;">\n          <i class="fa fa-align-justify"></i> Pairs Management\n        </div>\n\n\n\x3c!-- <h4 style="padding-left: 425px;">Manage Users</h4> --\x3e\n<div class="tabcntcls" style=" -webkit-transition: all 1s ease;transition: all 1s ease;padding: 25px;">\n  <div class="row">\n    <div class="col-md-9 align-items-center" style="display: inline-flex;padding-left: 0px;">\n      <span>Display : </span>\n      <select (change)="changeRowLimits($event)" style="width: auto;background: transparent;height: 30px;margin-left: 5px;">\n          <option *ngFor="let limit of rowLimits" [value]="limit.value">{{limit.key}}</option>\n      </select>\n\n      <div class="input-group-btn" style="margin-left: 10px;">\n        <button class="btn btn-primary button-refresh" style="cursor:pointer;" type="submit"  (click)="resetuserlist()">\n           <i class="fa fa-refresh" aria-hidden="true"></i>\n        </button>\n      </div>\n\n    </div>\n    <div class="col-md-3 p-2">\n\n        <div class="input-group">\n          <input type="text" [(ngModel)]="defsearch" class="form-control" placeholder="Search" id="txtSearch" (keyup.enter)="updateFilter()"  \n          (keyfocus)="updateFilter()"/>\n          <div class="input-group-btn">\n            <button class="btn btn-primary" style="cursor:pointer;margin-left: -2px;" type="submit" (click)="updateFilter()">\n              <span class="fa fa-search"></span>\n            </button>\n          </div>\n        </div>\n\n    </div>\n  </div>\n\x3c!-- \n   <div class="d-flex flex-row-reverse">\n          <div class="export_option">\n            <ul class="list-inline">\n              <li class="list-inline-item">\n                {{\'Exportusersdetails\'}}\n              </li>\n                           \n              <li class="list-inline-item">\n                <a (click)="exportToExcel_user()" class="cursorcls" title="Csv">\n              <i class="fas fa-file-download" style="color: green;"></i>\n                     </a>\n              </li>\n            </ul>\n          </div>\n        </div> --\x3e\n\n        <div class="d-flex flex-row-reverse">\n      <div class="export_option">\n        <ul class="list-inline">\n          <li class="list-inline-item btn btn-primary" (click)="opencreatepairmodel(createpaircontent)" style="cursor:pointer;margin-left: -2px;">\n            {{\'Create Pair +\'}}\n          </li>\n\n          \x3c!-- <li class="list-inline-item ">\n            <a (click)="exportToprofit()" class="cursorcls" title="Csv">       \n            <i class="fa fa-download" style="color: blue;"></i>\n            </a>\n          </li> --\x3e\n        </ul>\n      </div>\n    </div>\n  <div class="table-responsive tab_top"  >\n    <ngx-datatable #usertable class="bootstrap table table-bordered table-striped mb-0 material" [ngClass]="{\'loaders\': dataLoader == true }"\n\n    [columnMode]="\'force\'"\n    [headerHeight]="30"\n    [footerHeight]="50"\n    [rowHeight]="\'auto\'" [(limit)]="limit" [rows]=\'userrows\' [externalPaging]="true"\n        [count]="page.totalElements"\n        [offset]="page.pageNumber"\n        [limit]="page.size"\n        [scrollbarH]="true"\n        (page)=\'setPage($event)\' [externalSorting]="true" (sort)="onSort($event)" [loadingIndicator]="loading">\n\n    <ngx-datatable-column name="S.No" [width]="50">\n      <ng-template let-rowIndex="rowIndex" let-row="row" ngx-datatable-cell-template>\n        \x3c!-- {{row.$$index + 1}} --\x3e\n        \x3c!-- {{rowIndex + 1}} --\x3e\n        {{(page.pageNumber*page.size)+(rowIndex + 1)}}\n      </ng-template>\n    </ngx-datatable-column>\n\n\n    <ngx-datatable-column name="Pairs">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.pair}}\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name="Fee">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        {{row.fee}}\n      </ng-template>\n    </ngx-datatable-column>\n    \x3c!-- <ngx-datatable-column name="From Currency">\n      <ng-template let-value="value" let-row="row" ngx-datatable-cell-template>\n        <span class="brkwrdcls">{{row.fromCurrency}}</span>\n      </ng-template>\n    </ngx-datatable-column>\n\n      <ngx-datatable-column name="To Currency" >\n      <ng-template ngx-datatable-cell-template let-value="value" let-row="row" >\n      {{row.toCurrency}}\n        </ng-template>\n      </ngx-datatable-column> --\x3e\n\n      <ngx-datatable-column name="Status" >\n        <ng-template ngx-datatable-cell-template let-value="value" let-row="row" >\n        {{row.status}}\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name="Pair Address" >\n          <ng-template ngx-datatable-cell-template let-value="value" let-row="row" >\n          {{row.pair_address ? row.pair_address : \'-\'}}\n            </ng-template>\n          </ngx-datatable-column>\n\n    \n        <ngx-datatable-column name="Action">\n            <ng-template ngx-datatable-cell-template let-value="value" let-row="row" >&nbsp;&nbsp;\n              <button class="btn btn-link mr-1 mb-1 cursorcls" (click)="bannermodel(bannercontent,row)" *ngIf="row.pair_address && !row.contract_add_status" ngbTooltip="Edit">Add Staking</button>\n              <button class="btn btn-link mr-1 mb-1 cursorcls" *ngIf="row.pair_address && row.contract_add_status" ngbTooltip="Edit">Staked</button>\n\n              \x3c!-- <button class="btn btn-link mr-1 mb-1 cursorcls" (click)="publish_approve()" *ngIf="row.pair_address" ngbTooltip="Edit">Approve</button> --\x3e\n              \x3c!-- <button class="btn btn-link mr-1 mb-1 cursorcls"\n              (click)="addContractmodel(row)" *ngIf="row.pair_address" ngbTooltip="Edit">\n              Add Contract  \n              </button>\n              <button class="btn btn-link mr-1 mb-1 cursorcls"  \n              (click)="changehost(statusmodel, row)"\n              style="color:#b4b4b4;" >\n              <i *ngIf="row.status == \'Active\'" style="color: #1FA86D" class="fa fa-unlock" aria-hidden="true" ngbTooltip="Move to Deactive"></i>\n              <i *ngIf="row.status == \'Deactive\'"style="color: #E51F1F" class="ace-icon fa fa-lock bigger-130" aria-hidden="true" ngbTooltip="Move to Active"></i>\n              </button> --\x3e\n            </ng-template>\n        </ngx-datatable-column>\n\n    </ngx-datatable>\n  </div>\n</div>\n</div>\n\n<ng-template #statusmodel let-c="close" let-d="dismiss">\n    <div class="modal-body" id="actiondialog">\n      <h6>Do you want to change the status of Pairs?</h6>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-success cursorcls"\n      (click)="changebannerStatus(bannersvalue);c(\'Close click\')">Yes</button>\n      <button type="button" class="btn cursorcls"\n      (click)="c(\'Close click\')">No</button>\n    </div>\n</ng-template>\n\x3c!--Edit popup model--\x3e\n<ng-template #editbannercontent let-c="close" let-d="dismiss">\n<div class="modal-header">\n  <h5 class="modal-title text-uppercase" style="color: #347deb"><b>Edit pairs</b></h5>\n  <button type="button" class="close" aria-label="Close" (click)="d(\'Cross click\')" ngbTooltip="Close">\n  <span aria-hidden="true">&times;</span>\n  </button>\n</div>\n<div class="modal-body">\n   <div class="common-border"><form  autocomplete="off" (ngSubmit)="editpairs(pairsform)" #pairsform="ngForm">\n\n  <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Pair</label>\n    <div class="col-6">\n      <input type="text" style="cursor: not-allowed;"  class="form-control"  [(ngModel)] ="edithostlist.pair"  #pair="ngModel" name="currencyName" pattern="[a-zA-Z ]+" disabled required/>\n       \n      </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Buy Limit </label>\n    <div class="col-6">\n      <select class="form-control" name="buylimit" (change)="buycalculation(edithostlist)" [(ngModel)] = "edithostlist.buylimit" style="    font-size: 15px;color: #000;height: 39px !important;">\n          <option value=\'plus\'>+(Plus)</option>\n          <option value=\'minus\'>-(Minus)</option>\n         \x3c!--  <option *ngIf="edithostlist.buylimit==1" value=1>+(Plus)</option>\n          <option  *ngIf="edithostlist.buylimit==1"value=2>-(Minus)</option> --\x3e\n\n         \x3c!--  <option *ngFor="let x of symbol"  [selected]="edithostlist.buylimit == x.values" [value]="x.symbolval">{{x.values}}\n          {{edithostlist.buylimit == x.values}}\n          {{ x.symbolval}}\n          </option> --\x3e\n      \n      </select>\n      \n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Buy limit value(%) </label>\n    <div class="col-6">\n      <input type="number" name="emailid" class="form-control" [(ngModel)] ="edithostlist.buylimitvalue" #buylimitvalue="ngModel" (input)="buyratecalculation(edithostlist)" (keypress)="isNumberKey($event)" (cut)="$event.preventDefault()" (copy)="$event.preventDefault()" (paste)="$event.preventDefault()" required text>\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Buy Rate(1 {{fcurrency}}) </label>\n    <div class="col-6">\n      <input type="number"style="cursor: not-allowed;"name="usd_price"  onkeydown="javascript: return event.keyCode == 69 ? false : true" min="0"class="form-control" [(ngModel)] ="edithostlist.buyrate" #buyrate="ngModel" disabled required text>\n    </div>\n  </div>\n   <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Sell Limit  </label>\n    <div class="col-6">\n    <select class="form-control" name="selllimit" (change)="sellcalculation(edithostlist)"  [(ngModel)] = "edithostlist.selllimit" style="    font-size: 15px;color: #000;height: 39px !important;">\n          <option value=\'plus\'>+(Plus)</option>\n          <option value=\'minus\'>-(Minus)</option>\n      </select>\n    </div>\n  </div>\n    <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Sell limit value(%) </label>\n    <div class="col-6">\n      <input type="number" name="withdrawfee"  onkeydown="javascript: return event.keyCode == 69 ? false : true" min="0"class="form-control" [(ngModel)] ="edithostlist.selllimitvalue" #selllimitvalue="ngModel" (keypress)="isNumberKey($event)" (cut)="$event.preventDefault()" (copy)="$event.preventDefault()" (paste)="$event.preventDefault()" (input)="sellratecalculation(edithostlist)" required text>\n    </div>\n  </div>\n   <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Sell Rate (1 {{fcurrency}})</label>\n    <div class="col-6">\n      <input type="number"style="cursor: not-allowed;"name="maxwithamt"  onkeydown="javascript: return event.keyCode == 69 ? false : true" min="0"class="form-control" [(ngModel)] ="edithostlist.sellrate" #sellrate="ngModel"  disabled required text>\n    </div>\n  </div>\n  <div class="form-group row" *ngIf="fcurrency != \'IDD\'">\n    <label for="example-text-input" class="col-3 col-form-label">Market Price</label>\n    <div class="col-6">\n      <input type="number"style="cursor: not-allowed;"name="marketPrice"  onkeydown="javascript: return event.keyCode == 69 ? false : true" min="0"class="form-control" [(ngModel)] ="edithostlist.marketPrice" #marketPrice="ngModel" disabled required text>\n    </div>\n  </div>\n  <div class="form-group row" *ngIf="fcurrency == \'IDD\'">\n    <label for="example-text-input" class="col-3 col-form-label">Market Price</label>\n    <div class="col-6">\n      <input type="number"style="cursor: not-allowed;"name="marketPrice"  onkeydown="javascript: return event.keyCode == 69 ? false : true" min="0"class="form-control" [(ngModel)] ="edithostlist.marketPrice" #marketPrice="ngModel" required text>\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label"> Minimum exchange amount</label>\n    <div class="col-6">\n      <input type="number" name="total_amt"  onkeydown="javascript: return event.keyCode == 69 ? false : true" min="0"class="form-control" [(ngModel)] ="edithostlist.total_amt" #total_amt="ngModel"(keypress)="isNumberKey($event)" (cut)="$event.preventDefault()" (copy)="$event.preventDefault()" (paste)="$event.preventDefault()" required text>\n    </div>\n  </div>\n\n   \x3c!--  <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Minimum Exchange amount</label>\n    <div class="col-6">\n      <input type="number" name="min_amt"  onkeydown="javascript: return event.keyCode == 69 ? false : true" min="0"class="form-control" [(ngModel)] ="edithostlist.min_amt" #min_amt="ngModel"(keypress)="isNumberKey($event)" (cut)="$event.preventDefault()" (copy)="$event.preventDefault()" (paste)="$event.preventDefault()" required text>\n    </div>\n  </div> --\x3e\n\n  <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Fee Type </label>\n    <div class="col-6">\n         <input type="text"style="cursor: not-allowed;"name="fee_type"  class="form-control" [(ngModel)] ="edithostlist.fee_type" #fee_type="ngModel" disabled required text>\n     \x3c!-- <select id="select1" class="form-control"  [(ngModel)]="edithostlist.fee_type" #fee_type="ngModel" name="select1" class="form-control">\n  <option value="Percentage">Percentage</option>\n  <option value="fiat">fiat</option>\n  </select> --\x3e\n    </div>\n  </div>\n  <div class="form-group row">\n    <label for="example-text-input" class="col-3 col-form-label">Exchange Fee</label>\n    <div class="col-6">\n      <input type="number" name="fee"  onkeydown="javascript: return event.keyCode == 69 ? false : true" min="0"class="form-control" [(ngModel)] ="edithostlist.fee" #fee="ngModel" (keypress)="isNumberKey($event)" (cut)="$event.preventDefault()" (copy)="$event.preventDefault()" (paste)="$event.preventDefault()" required text>\n    </div>\n  </div>\n \n<div class="modal-footer">\n  <button type="submit"  style="cursor: pointer; background-color:#349eeb;" class="btn btn-info cursorcls" [disabled]=\'!pairsform.valid\'>Submit</button>\n  <button type="button"  style="cursor: pointer; background-color:#eb3d34;" class="btn btn-secondary cursorcls" (click)="c(\'Close click\')" >Close</button>\n</div>\n</form></div>\n</div>\n\n</ng-template>\n\n\n   \n\x3c!-- create pair --\x3e\n\n<ng-template #createpaircontent let-c="close" let-d="dismiss" >\n      <div class="modal-header">\n        <h6 class="modal-title text-uppercase" style="color:#eb7d34;"><b>Add Pair List</b></h6>\n        <button type="button" *ngIf="dataLoader" (click)="restrictclose()" class="close" aria-label="Close" ngbTooltip="Close">\n        <span aria-hidden="true">&times;</span>\n        </button>\n         <button type="button" *ngIf="!dataLoader" (click)="d(\'Cross click\');reformdata()" class="close" aria-label="Close" ngbTooltip="Close">\n        <span aria-hidden="true">&times;</span>\n        </button>\n      </div>\n      <div class="modal-body" [ngClass]="{\'loaders\': dataLoader == true }">\n        <div class="common-border">\n          <form  autocomplete="off" #createpair_form="ngForm">          \n            <div class="form-group row">\n                <label for="example-text-input" class="col-4 col-form-label">From Currency </label>\n                <div class="col-6">\n                  <select class="form-control" name="fromCurrency"  [(ngModel)] = "createpairlist.fromCurrency" style=" font-size: 15px;color: #000;height: 39px !important;">\n                    <option class="dropdown-item" disabled selected value="undefined">Select an Option</option>\n                     <option *ngFor="let ccy of from_currency; let i=index" [selected]="i==0">{{ccy.currencySymbol}}</option>\n                 </select>\n               </div>\n             </div>\n             <div class="form-group row">\n                <label for="example-text-input" class="col-4 col-form-label">To Currency </label>\n                <div class="col-6">\n                  <select class="form-control" name="toCurrency"  [(ngModel)] = "createpairlist.toCurrency" style=" font-size: 15px;color: #000;height: 39px !important;">\n                    <option class="dropdown-item" disabled selected value="undefined">Select an Option</option>\n                    <option *ngFor="let ccy of currencyData; let i=index" [selected]="i==0">{{ccy.currencySymbol}}</option>\n                 </select>\n               </div>\n             </div>\n              <div class="form-group row">\n                <label for="example-text-input" class="col-4 col-form-label">Status</label>\n                <div class="col-6">\n                  <select class="form-control" name="status"  [(ngModel)] = "createpairlist.status" style=" font-size: 15px;color: #000;height: 39px !important;">\n                    <option class="dropdown-item" disabled selected value="undefined">Select an Option</option>\n                    <option value=\'Active\'>Active</option>\n                    <option value=\'Deactive\'>Deactive</option>\n                 </select>\n               </div>\n             </div>\n             \n            <div class="modal-footer">\n              <div> \n                <button type="submit" [disabled] =\'createpair_form.invalid\' style="cursor: pointer; background-color:#349eeb;" class="btn btn-info cursorcls" (click)="onSubmitData(\'coin\')">Submit</button>\n                <button type="button"  style="cursor: pointer;background-color:#eb3d34" class="btn btn-secondary cursorcls" (click)="c(\'Close click\')" >Close</button>\n              </div> \n            </div>\n            \n          </form>\n        </div>\n      </div>\n    </ng-template>\n\n    \x3c!-- create pair --\x3e\n\n     <ng-template #bannercontent let-c="close" let-d="dismiss">\n      \n      <div class="modal-header">\n        <h6 class="modal-title text-uppercase">Update Rewards</h6>\n        <button type="button" style="cursor:pointer;" class="close" aria-label="Close" (click)="d(\'Cross click\')" ngbTooltip="Close">\n          <span aria-hidden="true">&times;</span>\n        </button>\n      </div>\n\n      <div class="modal-body">\n        <div class="col-md-12">\n          \n              <form name="form" (ngSubmit)="willaddform.form.valid && willadd()" #willaddform="ngForm"  novalidate>\n                <div class="form-group">\n                  <label for="email">Staking Rewards </label>\n                  <input type="number" placeholder="Staking Rewards" class="form-control" name="heading" [(ngModel)]="Datas.rewards"  #rewards="ngModel" pattern="^\\S.*"  required />\n                  <div *ngIf="(rewards.invalid && willaddform.submitted) || rewards.touched" class="text-danger">\n                    <span *ngIf="rewards.errors?.required">Staking rewards is required</span>\n                    <span *ngIf="rewards.errors?.pattern">Prefix space not allowed</span>\n                  </div>\n                </div>\n\n                <div class="form-group rit">\n                  <button class="btn btn-primary" style="cursor:pointer;" *ngIf="!FromSubmit" [disabled]="fileerr" >Update</button>\n                  <button *ngIf="FromSubmit" type="submit" class="btn btn-danger rit">Processing <i class="fa fa-spinner fa-spin" style="font-size:16px"></i> </button>\n                </div>\n              </form>\n            \n        </div>\n      </div>\n      \n      <div class="modal-footer"></div>\n    \n    </ng-template>'}}]);