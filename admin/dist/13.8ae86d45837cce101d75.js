(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{FiFz:function(n,t){n.exports='\t\n\n\t\t<div class="card">\n        <div class="card-header">\n          <strong>General Settings</strong> \n        </div>\n        <div class="card-body">\n          <form  #basicform="ngForm">\n          \n           \n            <div class="form-group row">\n              <label class="col-md-3 col-form-label" for="email-input">Admin Username</label>\n              <div class="col-md-9">\n                <input type="text" name="admin_name" [(ngModel)]="admindetails.admin_name" class="form-control col-md-12" #admin_name="ngModel" placeholder="Admin Username" pattern="^[^-\\s][a-zA-Z0-9_\\s-]+$" [class.form-control-danger]="admin_name.invalid && admin_name.touched" required [minlength]="3" [maxlength]="10"   style="width: 373px;" >\n                 <small  style="color: red" class="form-text error" \n                 *ngIf="admin_name.invalid && admin_name.touched && admin_name.errors?.required">\n\t\t\t\t\t       Admin Username is required!\n\t\t\t\t</small>\n\t\t\t\t<small style="color: red" class="form-text error" *ngIf="admin_name.invalid && admin_name.touched && admin_name.errors?.pattern">\n\t\t\t\t\t       Admin Username is invalid!\n\t\t\t\t</small>\n\t\t\t\t<small  style="color: red" class="form-text error" *ngIf="admin_name.invalid && admin_name.touched && (admin_name.errors?.minlength || admin_name.errors?.maxlength)"> Admin Username should contains from 3 to 10 characters\n\t\t          </small>\n\x3c!--                 <span class="help-block">Please enter your email</span>\n --\x3e              </div>\n            </div>\n           \n          <div class="form-group row">\n              <label class="col-md-3 col-form-label" for="email-input">Email Id</label>\n              <div class="col-md-9">\n                <input type="email"  name="contact_mail" class="form-control" [(ngModel)]="admindetails.admin_emailid" pattern=".+@.+\\..+" class="col-md-12 fullwidth form-control" placeholder="Email address" #admin_emailid="ngModel" [class.form-control-danger]="admin_emailid.invalid && admin_emailid.touched"  required  style="width: 373px;" readonly="">\n\x3c!--                 <span class="help-block">Please enter your email</span>\n\n\n --\x3e\n  \t\t\t\t<small style="color: red" class="form-text error" *ngIf="admin_emailid.invalid && admin_emailid.touched && admin_emailid.errors?.required">\n\t\t\t\t\t\t            Email is required!\n\t\t\t\t</small>\n\t\t\t\t<small  style="color: red" class="form-text error" *ngIf="admin_emailid.invalid && admin_emailid.touched && admin_emailid.errors?.pattern">\n\t\t\t\t\t\t           Email should be the real one!\n\t\t\t\t</small>\n               </div>\n            </div>\n           \n                      \n          \n            <div class="form-group row" >\n              <label class="col-md-3 col-form-label" for="file-input">Image file</label>\n              <div class="col-md-9" >\n                <input #fileinput id="file-input" name="file-input" type="file" \n                (change)="fileChangeEvent($event)" placeholder="Upload a file..." single accept="image/gif,image/jpeg,image/jpg,image/png,"/>\n                </div>\n              </div>\n            <div *ngIf="!admindetails.admin_image">\n                <img src="../../../assets/images/admin.png" height="60px" width="60px" disabled/>\n              </div>\n              <div *ngIf="admindetails.admin_image">\n                <img src="{{admindetails.admin_image}}" height="100px" width="100px" disabled/>\n              </div>\n            <div>\n                <label class="col-md-3 col-form-label" >OTP Disable and Enable  </label>\n              <label class="switch">\n                <input type="checkbox" (change)="check($event)" [(ngModel)]="admindetails.otp_options" name="otp">\n                <div class="slider round">\n                  <h3><span class="on pr-4">Enable</span><span class="off pl-4">Disable</span></h3>\n                </div>\n              </label>\n            </div>\n               \n          </form>\n        </div>\n        <div class="card-footer" style="text-align: center;">\n          <button type="button" *ngIf="!isValid" [disabled]="!basicform.valid" class="btn btn-sm btn-primary" (click)="uploadimage();"><i class="fa fa-dot-circle-o" ></i> Submit\n          </button>\n          <h6 *ngIf="isValid">Loading... <i class="fa fa-spinner fa-spin"></i> </h6>\n      \x3c!--     <button type="reset" class="btn btn-sm btn-danger"><i class="fa fa-ban"></i> Reset</button> --\x3e\n        </div>\n      </div>'},Ty4v:function(n,t,e){"use strict";e.r(t);var i=e("mrSG"),a=e("CcnG"),s=e("Ip0R"),o=e("3EpR"),l=e("gbi4"),r=e("AytR"),d=e("sE5F"),c=e("SbLv"),m=e("RH9n"),p=function(){function n(n,t,e,i,a){this.http=n,this.commonService=t,this.toastr=e,this.cookieService=i,this.mysocket=a,this.admindetails={},this.isValid=!1,this.serviceHost=r.a.BackendHost,this.adminfilesToUpload=[]}return n.prototype.resetsss=function(){this.myInputVariable.nativeElement.value=""},n.prototype.ngOnInit=function(){var n=this;this.commonService.sessioncheck(),this.commonService.ipcheck(),this.cookieService.get("role"),this.commonService.getData("admin/adminDetails").subscribe(function(t){n.admindetails=t.data})},n.prototype.Emitsocket=function(n,t){this.mysocket.emit(n,t)},n.prototype.fileChangeEvent=function(n){var t,e=this,i=n.target.files[0].type;"image/jpeg"==i||"image/gif"==i||"image/jpg"==i||"image/png"==i?(this.adminfilesToUpload=n.target.files,this.adminfilename=n.target.files[0].name,(t=new FileReader).onload=function(n){e.admindetails.admin_image=n.target.result},t.readAsDataURL(n.target.files[0])):(this.toastr.errorToastr("Please choose a right file!","Error"),this.resetsss(),this.adminfilesToUpload=[])},n.prototype.uploadimage=function(){var n=this;if(0==this.adminfilesToUpload.length)this.savebasicinfo();else{for(var t=new FormData,e=this.adminfilesToUpload,i=0;i<e.length;i++)t.append("uploads",e[i],e[i].name);this.http.post(this.serviceHost+"uploadsing",t).map(function(n){return n.json()}).subscribe(function(t){t.status?(n.admindetails.admin_image=t.data.Location,n.savebasicinfo()):n.toastr.errorToastr("Error in Uploading Profile Image","Oops")})}},n.prototype.check=function(n){1==n.target.checked?this.admindetails.otp_options=!0:0==n.target.checked&&(this.admindetails.otp_options=!1)},n.prototype.savebasicinfo=function(){var n=this;this.cookieService.get("role"),this.commonService.requestData("admin/adminprofilelist",this.admindetails).subscribe(function(t){n.Emitsocket("admindetails",n.admindetails),n.toastr.successToastr("Basic Information Updated ","Success"),n.isValid=!1})},n.ctorParameters=function(){return[{type:d.b},{type:l.a},{type:o.a},{type:c.a},{type:m.a}]},i.c([Object(a.nb)("fileinput",{static:!1}),i.f("design:type",a.u)],n.prototype,"myInputVariable",void 0),n=i.c([Object(a.n)({selector:"app-settings",template:e("FiFz"),styles:[e("tNiw")]}),i.f("design:paramtypes",[d.b,l.a,o.a,c.a,m.a])],n)}(),f=e("ZYCi"),h=[{path:"",component:p,data:{title:"settings"}}],u=function(){function n(){}return n=i.c([Object(a.K)({declarations:[],imports:[s.b,f.d.forChild(h)],exports:[f.d]})],n)}(),g=e("gIcY");e.d(t,"SettingsModule",function(){return v});var b={url:""},v=function(){function n(){}return n=i.c([Object(a.K)({declarations:[p],imports:[s.b,u,g.a,m.b.forRoot(b)]})],n)}()},tNiw:function(n,t){n.exports='.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n}\n\n.switch input {\n  display: none;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  transition: 0.4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: "";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  transition: 0.4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n.on {\n  display: none;\n}\n\n.on, .off {\n  color: white;\n  position: absolute;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  top: 50%;\n  left: 50%;\n  font-size: 12px;\n  font-family: Verdana, sans-serif;\n}\n\ninput:checked + .slider .on {\n  display: block;\n}\n\ninput:checked + .slider .off {\n  display: none;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 90px;\n  height: 34px;\n}\n\n.switch input {\n  display: none;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ca2222;\n  transition: 0.4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: "";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  transition: 0.4s;\n}\n\ninput:checked + .slider {\n  background-color: #2ab934;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(55px);\n  transform: translateX(55px);\n}'}}]);